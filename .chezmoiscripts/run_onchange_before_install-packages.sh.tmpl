{{ if eq .chezmoi.os "linux" -}}
#!/bin/bash

os_release="$(cat /etc/os-release)"

dnfpkgs=(
    "git"
    "unzip"
    "tar"
    "findutils"
    "https://github.com/PowerShell/PowerShell/releases/download/v7.5.0/powershell-7.5.0-1.rh.x86_64.rpm"
    "wget"
    "procps-ng"
    "dnf-plugins-core"
    "make"
    "glibc-langpack-en"
)
[[ $(command -v dnf) ]] \
    && dnf install --quiet --assumeyes "${dnfpkgs[@]}" \
    && dnf config-manager --add-repo "https://mise.jdx.dev/rpm/mise.repo" \
    && dnf install --quiet --assumeyes mise

# mise requires gpg-agent
# Amazon Linux 2023 comes with gnupg2-minimal which does not include gpg-agent
# below command swaps out -minimal for the full gnupg2 package that includes gpg-agent
[[ "$os_release" =~ 'PLATFORM_ID="platform:al2023"' ]] \
    && dnf swap --quiet --assumeyes gnupg2-minimal.x86_64 gnupg2.x86_64

aptpkgs=(
    "gpg"
    "wget"
    "curl"
    "git"
    "unzip"
    "tar"
)
[[ $(command -v apt) ]] \
    && apt update --quiet --yes \
    && apt install --quiet --yes "${aptpkgs[@]}" \
    && install -dm 755 /etc/apt/keyrings \
    && wget -qO - https://mise.jdx.dev/gpg-key.pub \
        | gpg --dearmor \
        | tee /etc/apt/keyrings/mise-archive-keyring.gpg 1> /dev/null \
    && echo "deb [signed-by=/etc/apt/keyrings/mise-archive-keyring.gpg arch=amd64] https://mise.jdx.dev/deb stable main" \
        | tee /etc/apt/sources.list.d/mise.list \
    && apt update --quiet --yes \
    && apt install --quiet --yes mise

[[ $(command -v mise) ]] \
    && eval "$(mise activate bash)" \
    && mise trust > /dev/null \
    && mise install > /dev/null

[[ ! $(command -v oh-my-posh) ]] \
    && curl -s https://ohmyposh.dev/install.sh | bash -s > /dev/null

args+=( --recursive )
args+=( --depth 1 )
args+=( --shallow-submodules )
args+=( "https://github.com/akinomyoga/ble.sh.git" )
git clone "${args[@]}" > /dev/null \
    && unset args \
    && make -C ble.sh install PREFIX=~/.local > /dev/null \
    && source "$HOME/.local/share/blesh/ble.sh" --noattach

# https://docs.atuin.sh/guide/installation/#recommended-installation-approach
# curl --proto '=https' --tlsv1.2 -LsSf https://setup.atuin.sh | sh
atuin_installer_url="https://github.com/atuinsh/atuin/releases/latest/download/atuin-installer.sh"
curl --proto '=https' --tlsv1.2 --location --silent --show-error --fail "$atuin_installer_url" | sh

{{ else if eq .chezmoi.os "darwin" -}}
#!/bin/bash
echo "Time to update this script for mac"
{{ end -}}